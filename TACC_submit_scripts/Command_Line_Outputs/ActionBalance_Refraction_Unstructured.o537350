no change     /home1/04637/mdl2665/anaconda3/condabin/conda
no change     /home1/04637/mdl2665/anaconda3/bin/conda
no change     /home1/04637/mdl2665/anaconda3/bin/conda-env
no change     /home1/04637/mdl2665/anaconda3/bin/activate
no change     /home1/04637/mdl2665/anaconda3/bin/deactivate
no change     /home1/04637/mdl2665/anaconda3/etc/profile.d/conda.sh
no change     /home1/04637/mdl2665/anaconda3/etc/fish/conf.d/conda.fish
no change     /home1/04637/mdl2665/anaconda3/shell/condabin/Conda.psm1
no change     /home1/04637/mdl2665/anaconda3/shell/condabin/conda-hook.ps1
no change     /home1/04637/mdl2665/anaconda3/lib/python3.9/site-packages/xontrib/conda.xsh
no change     /home1/04637/mdl2665/anaconda3/etc/profile.d/conda.csh
no change     /home1/04637/mdl2665/.bashrc
No action taken.

     active environment : fenicsx-env
    active env location : /home1/04637/mdl2665/anaconda3/envs/fenicsx-env
            shell level : 2
       user config file : /home1/04637/mdl2665/.condarc
 populated config files : 
          conda version : 4.12.0
    conda-build version : 3.21.8
         python version : 3.9.12.final.0
       virtual packages : __linux=4.18.0=0
                          __glibc=2.28=0
                          __unix=0=0
                          __archspec=1=x86_64
       base environment : /home1/04637/mdl2665/anaconda3  (writable)
      conda av data dir : /home1/04637/mdl2665/anaconda3/etc/conda
  conda av metadata url : None
           channel URLs : https://repo.anaconda.com/pkgs/main/linux-64
                          https://repo.anaconda.com/pkgs/main/noarch
                          https://repo.anaconda.com/pkgs/r/linux-64
                          https://repo.anaconda.com/pkgs/r/noarch
          package cache : /home1/04637/mdl2665/anaconda3/pkgs
                          /home1/04637/mdl2665/.conda/pkgs
       envs directories : /home1/04637/mdl2665/anaconda3/envs
                          /home1/04637/mdl2665/.conda/envs
               platform : linux-64
             user-agent : conda/4.12.0 requests/2.27.1 CPython/3.9.12 Linux/4.18.0-372.26.1.el8_6.x86_64 rocky/8.6 glibc/2.28
                UID:GID : 839365:819760
             netrc file : None
           offline mode : False

TACC:  Starting up job 537350 
TACC:  Starting parallel tasks... 
nt 2000
KSP Object: 250 MPI processes
  type: gmres
    restart=30, using Classical (unmodified) Gram-Schmidt Orthogonalization with no iterative refinement
    happy breakdown tolerance 1e-30
  maximum iterations=10000, nonzero initial guess
  tolerances:  relative=1e-05, absolute=1e-50, divergence=10000.
  left preconditioning
  using PRECONDITIONED norm type for convergence test
PC Object: 250 MPI processes
  type: bjacobi
    number of blocks = 250
    Local solver information for first block is in the following KSP and PC objects on rank 0:
    Use -ksp_view ::ascii_info_detail to display information for all blocks
  KSP Object: (sub_) 1 MPI processes
    type: preonly
    maximum iterations=10000, initial guess is zero
    tolerances:  relative=1e-05, absolute=1e-50, divergence=10000.
    left preconditioning
    using NONE norm type for convergence test
  PC Object: (sub_) 1 MPI processes
    type: ilu
      out-of-place factorization
      0 levels of fill
      tolerance for zero pivot 2.22045e-14
      matrix ordering: natural
      factor fill ratio given 1., needed 1.
        Factored matrix follows:
          Mat Object: 1 MPI processes
            type: seqaij
            rows=31980, cols=31980
            package used to perform factorization: petsc
            total: nonzeros=1136968, allocated nonzeros=1136968
              not using I-node routines
    linear system matrix = precond matrix:
    Mat Object: (sub_) 1 MPI processes
      type: seqaij
      rows=31980, cols=31980
      total: nonzeros=1136968, allocated nonzeros=1136968
      total number of mallocs used during MatSetValues calls=0
        not using I-node routines
  linear system matrix = precond matrix:
  Mat Object: 250 MPI processes
    type: mpiaij
    rows=7950228, cols=7950228
    total: nonzeros=360188584, allocated nonzeros=360188584
    total number of mallocs used during MatSetValues calls=0
      not using I-node (on process 0) routines
Niter 6
convergence code 2
Final t 1000.0
L2 error 7098.9296885678
L inf error 158.71737762242537
min in error (5295440, -10.391547138938911)
max error (5295438, 158.71737762242537)
h 0.01
dof 104060401
The build time is 842.8793060779572 seconds
The solve time is 1017.1713230609894 seconds
Final solution on boundary
WARNING:py.warnings:/home1/04637/mdl2665/WAVEx/CFx/utils.py:57: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  vals = np.array(vals)

Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2246858461948091

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.17362011066139504

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.19816623549404597

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1192769331799599

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2530811636337629

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.009087854626285906

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.17540191269282962

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.032802012899354756

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.42891243934532486

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.12906553223002393

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0033978744498464903

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.22768972684518696

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1966268519970037

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.26849019194679946

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.19907423019442058

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1874959368378267

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.12051431054368468

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.24692928704752443

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.062261278214669334

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.06330101028755139

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6168713545646735

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.057182176632028014

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.3154923097877519

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.26729998168928615

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6464006800218721

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.04604857588601749

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2654101827442961

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.061268822334195415

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6177413288755919

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: -1.1470072258857342e-07

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2783924777296214

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.22767040161395505

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2676311639559902

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.11833034152239567

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.5431039433108824

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 6.025137439403755e-06

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.26592616031526994

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.11966686457741578

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.11965668010824711

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.22617394383426206

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.09147109724185744

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6355561732951225

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.07016176357526265

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1433131217408188

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.14325207215563637

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.15734100128559356

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.23050581503569215

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.22716147794879837

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.09085094700887981

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.14132967518435005

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6370438742528299

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.10768648809045425

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.18115727725568204

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.11309667155520657

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.11417470979509396

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.27019859107754723

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.08399211105588367

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.3313669366649981

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.608954759544831

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.3300334056913752

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6227172607637028

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1191329077218175

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.09131474064989782

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6382155154402699

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6285068766786929

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.11998608525635367

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.17615665018603352

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1976294163032803

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.11962576234942805

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.09980488295132967

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.14133055940745107

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.19961369244068866

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.06459220359717477

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2310498638267044

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2300302088151588

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.329276745131587

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.14638704601637642

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6137518308771438

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6078858497813645

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0451802148877253

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.17721494767771437

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.13121196597383036

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.23035108968612397

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.09106048653482864

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.17625162958530766

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.17816181949284554

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.23169232634970813

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.083714686818585

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.14239226522464304

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.07197385680099976

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1302197390566277

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1135774578549486

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.12996693382974267

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0018977476119037533

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.12164403266021727

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.10806392862271258

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.13418373685921908

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1733515764176543

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2686003876285997

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6210613100609876

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6013597179982378

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.12054669648264871

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1457057885772819

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.22543066114395535

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2831732721739461

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2590615111065298

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.14198382633709916

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6265909974985888

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.269962827852606

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.4125706599937518

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6395340663657448

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.13213657333488796

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2275613007308271

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.13123191298011905

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.15084914378152905

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.22769941645737335

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.10139599817696253

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.20052930899621166

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.059930958988213816

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.19635451469314769

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.05405788917601922

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.17563960182191513

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.20807414788008036

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6084777846965401

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.17946317164947076

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1177385808244298

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.20315949761382862

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.08643823530056605

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.14459336962579245

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1197009551298946

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.15661081713614108

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.09822935253874

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.266117642069644

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.13207715685415936

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: -9.481140310434737e-09

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6152651282716238

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.5998714616431291

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: -1.5920190996073792e-11

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.23297047586443276

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.06740835112321335

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2563313600075943

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.06314857259616821

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.2219009433356102

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.17313358260118686

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.0

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.07762550484773961

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.11931570173987774

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1790512902908604

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.158501426976584

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1098477984848806

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.27308161226577987

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.19617977662647818

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.1984091880340466

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
Traceback (most recent call last):
  File "/home1/04637/mdl2665/WAVEx/test/ONR_testbed/A11_Refraction_Unstructured.py", line 468, in <module>
    Dir_vec = CFx.wave.calculate_mean_dir(u_cart,V2,N_dof_1,N_dof_2,local_range2)
  File "/home1/04637/mdl2665/WAVEx/CFx/wave.py", line 365, in calculate_mean_dir
    int1 = fem.assemble_scalar(int1)
  File "/home1/04637/mdl2665/anaconda3/envs/fenicsx-env/lib/python3.10/site-packages/dolfinx/fem/assemble.py", line 125, in assemble_scalar
    constants = constants or _pack_constants(M)
TypeError: pack_constants(): incompatible function arguments. The following argument types are supported:
    1. (form: dolfinx::fem::Form<double>) -> numpy.ndarray[numpy.float64]
    2. (e: dolfinx::fem::Expression<double>) -> numpy.ndarray[numpy.float64]
    3. (form: dolfinx::fem::Form<float>) -> numpy.ndarray[numpy.float32]
    4. (e: dolfinx::fem::Expression<float>) -> numpy.ndarray[numpy.float32]
    5. (form: dolfinx::fem::Form<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    6. (e: dolfinx::fem::Expression<std::complex<double> >) -> numpy.ndarray[numpy.complex128]
    7. (form: dolfinx::fem::Form<std::complex<float> >) -> numpy.ndarray[numpy.complex64]
    8. (e: dolfinx::fem::Expression<std::complex<float> >) -> numpy.ndarray[numpy.complex64]

Invoked with: 0.6036409975412641

Did you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,
<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic
conversions are optional and require extra headers to be included
when compiling your pybind11 module.
TACC:  MPI job exited with code: 1 
TACC:  Shutdown complete. Exiting. 
